'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const debug_1 = tslib_1.__importDefault(require("debug"));
const humanize_ms_1 = tslib_1.__importDefault(require("humanize-ms"));
const errors_1 = require("@ant-basement/errors");
const db_1 = tslib_1.__importDefault(require("./client/db"));
const file_1 = tslib_1.__importDefault(require("./client/file"));
const function_1 = tslib_1.__importDefault(require("./client/function"));
const constant_1 = require("./constant");
const utility_1 = require("./utility");
const logger = {
    info: debug_1.default('basement:info'),
    warn: debug_1.default('basement:warn'),
    error: debug_1.default('basement:error'),
};
class Basement {
    constructor(options) {
        utility_1.assert(options, 'options is required');
        utility_1.assert(options.mode, 'mode is required');
        utility_1.assert(options.spaceId, 'spaceId is required');
        utility_1.assert(options.endpoint, 'endpoint is required');
        utility_1.assert(options.httpclient, 'httpclient is required');
        this.logger = options.logger || logger;
        this.urllib = options.httpclient;
        delete options.logger;
        delete options.httpclient;
        this.options = options;
    }
    get db() {
        if (this._db) {
            return this._db;
        }
        this._db = new db_1.default(this);
        return this._db;
    }
    get file() {
        if (this._file) {
            return this._file;
        }
        this._file = new file_1.default(this);
        return this._file;
    }
    get ['function']() {
        if (this._function) {
            return this._function;
        }
        this._function = new function_1.default(this);
        return this._function;
    }
    createTraceId() {
        const digits = '1234567890abcdef';
        const length = digits.length;
        return (new Array(length)).fill(0).map(() => digits[Math.floor(Math.random() * length)]).join('');
    }
    async request(requestOptions) {
        this.logger.info('[REQUEST] requestOptions ' + JSON.stringify(requestOptions, null, 2));
        let params = {};
        params.query = Object.assign({ now: Date.now() }, requestOptions.query);
        const url = `${this.options.endpoint}${requestOptions.path}?${utility_1.queryToString(params.query)}`;
        if (requestOptions.stream) {
            params.stream = requestOptions.stream;
        }
        else if (requestOptions.data) {
            params.data = requestOptions.data;
        }
        params.method = requestOptions.method || constant_1.Method.POST;
        params.timeout = humanize_ms_1.default(this.options.timeout || requestOptions.timeout || '5s');
        params.headers = Object.assign({}, requestOptions.headers);
        params.dataType = 'json';
        params.contentType = 'json';
        params.serviceHeaders = Object.assign({}, requestOptions.serviceHeaders, {
            sdkType: this.options.mode,
            spaceId: this.options.spaceId,
            traceId: this.createTraceId(),
        });
        this.logger.info('[REQUEST] before transform ' + JSON.stringify(params, null, 2));
        params = this.transform(params);
        this.logger.info('[REQUEST] send request to url ' + url + ' with options ' + JSON.stringify(params, null, 2));
        const res = await this.urllib.request(url, params);
        if (res.status >= 400) {
            throw errors_1.composeFromHttpResponse(res.status, res.data);
        }
        return res.data;
    }
    toString() {
        return this.options;
    }
    transform(..._) {
        throw new errors_1.ECODE.UnsupportedError('should not use default implementation');
    }
}
exports.default = Basement;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZW1lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9saWIvYmFzZW1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDOzs7QUFFYiwwREFBMEI7QUFDMUIsc0VBQTZCO0FBQzdCLGlEQUFzRTtBQUV0RSw2REFBbUM7QUFDbkMsaUVBQXVDO0FBQ3ZDLHlFQUErQztBQUUvQyx5Q0FBb0M7QUFFcEMsdUNBQWtEO0FBRWxELE1BQU0sTUFBTSxHQUFHO0lBQ2IsSUFBSSxFQUFFLGVBQUssQ0FBQyxlQUFlLENBQUM7SUFDNUIsSUFBSSxFQUFFLGVBQUssQ0FBQyxlQUFlLENBQUM7SUFDNUIsS0FBSyxFQUFFLGVBQUssQ0FBQyxnQkFBZ0IsQ0FBQztDQUMvQixDQUFDO0FBRUY7SUFRRSxZQUFZLE9BQXdCO1FBQ2xDLGdCQUFNLENBQUMsT0FBTyxFQUFFLHFCQUFxQixDQUFDLENBQUM7UUFDdkMsZ0JBQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLGtCQUFrQixDQUFDLENBQUM7UUFDekMsZ0JBQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLHFCQUFxQixDQUFDLENBQUM7UUFDL0MsZ0JBQU0sQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLHNCQUFzQixDQUFDLENBQUM7UUFDakQsZ0JBQU0sQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLHdCQUF3QixDQUFDLENBQUM7UUFFckQsSUFBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxJQUFJLE1BQU0sQ0FBQztRQUN2QyxJQUFJLENBQUMsTUFBTSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUM7UUFFakMsT0FBTyxPQUFPLENBQUMsTUFBTSxDQUFDO1FBQ3RCLE9BQU8sT0FBTyxDQUFDLFVBQVUsQ0FBQztRQUMxQixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUN6QixDQUFDO0lBRUQsSUFBVyxFQUFFO1FBQ1gsSUFBSSxJQUFJLENBQUMsR0FB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