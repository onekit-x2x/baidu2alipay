'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const base_1 = tslib_1.__importDefault(require("./base"));
const utility_1 = require("../utility");
const constant_1 = require("../constant");
const utility_2 = require("@ant-basement/utility");
class DbClient extends base_1.default {
    constructor(builder) {
        super(builder, constant_1.Service.DB);
        this.path = '/gateway.execute';
    }
    async createCollection(name, options = {}) {
        const op = new utility_2.Op('createCollection', { name, options });
        return await this.request({
            path: this.path,
            data: op.inspect(),
        });
    }
    async collections() {
        const op = new utility_2.Op('collections');
        return await this.request({
            path: this.path,
            data: op.inspect(),
        });
    }
    collection(collection) {
        utility_1.assert(collection, 'collection name is required');
        const self = this;
        return new Proxy({}, {
            get(target, prop, receiver) {
                if (utility_2.isCollectionOp(prop)) {
                    return async function bound(...raw) {
                        prop = prop.toString();
                        const spec = utility_2.OP_SPECS[prop];
                        const args = spec.getArgsFromArray(raw || []);
                        args.collection = collection;
                        const op = new utility_2.Op(prop, args);
                        return utility_2.json2js(await self.request({
                            path: self.path,
                            data: op.inspect(),
                        }));
                    };
                }
                return Reflect.get(target, prop, receiver);
            },
        });
    }
}
exports.default = DbClient;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvY2xpZW50L2RiLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQzs7O0FBRWIsMERBQWdDO0FBQ2hDLHdDQUFvQztBQUNwQywwQ0FBc0M7QUFDdEMsbURBQThFO0FBRTlFLGNBQWUsU0FBUSxjQUFVO0lBRy9CLFlBQVksT0FBTztRQUNqQixLQUFLLENBQUMsT0FBTyxFQUFFLGtCQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7UUFIckIsU0FBSSxHQUFXLGtCQUFrQixDQUFDO0lBSTFDLENBQUM7SUFPTSxLQUFLLENBQUMsZ0JBQWdCLENBQUMsSUFBWSxFQUFFLFVBQWtCLEVBQUU7UUFDOUQsTUFBTSxFQUFFLEdBQUcsSUFBSSxZQUFFLENBQUMsa0JBQWtCLEVBQUUsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQztRQUN6RCxPQUFPLE1BQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUN4QixJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7WUFDZixJQUFJLEVBQUUsRUFBRSxDQUFDLE9BQU8sRUFBRTtTQUNuQixDQUFDLENBQUM7SUFDTCxDQUFDO0lBS00sS0FBSyxDQUFDLFdBQVc7UUFDdEIsTUFBTSxFQUFFLEdBQUcsSUFBSSxZQUFFLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDakMsT0FBTyxNQUFNLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDeEIsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO1lBQ2YsSUFBSSxFQUFFLEVBQUUsQ0FBQyxPQUFPLEVBQUU7U0FDbkIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQU9NLFVBQVUsQ0FBQyxVQUFrQjtRQUNsQyxnQkFBTSxDQUFDLFVBQVUsRUFBRSw2QkFBNkIsQ0FBQyxDQUFDO1FBQ2xELE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQztRQUVsQixPQUFPLElBQUksS0FBSyxDQUFDLEVBQUUsRUFBRTtZQUNuQixHQUFHLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxRQUFRO2dCQUN4QixJQUFJLHdCQUFjLENBQUMsSUFBSSxDQUFDLEVBQUU7b0JBQ3hCLE9BQU8sS0FBSyxnQkFBZ0IsR0FBRyxHQUFHO3dCQUNoQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO3dCQUN2QixNQUFNLElBQUksR0FBRyxrQkFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO3dCQUM1QixNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxJQUFJLEVBQUUsQ0FBQyxDQUFDO3dCQUM5QyxJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQzt3QkFDN0IsTUFBTSxFQUFFLEdBQUcsSUFBSSxZQUFFLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO3dCQUU5QixPQUFPLGlCQUFPLENBQUMsTUFBTSxJQUFJLENBQUMsT0FBTyxDQUFDOzRCQUNoQyxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7NEJBQ2YsSUFBSSxFQUFFLEVBQUUsQ0FBQyxPQUFPLEVBQUU7eUJBQ25CLENBQUMsQ0FBQyxDQUFDO29CQUNOLENBQUMsQ0FBQztpQkFDSDtnQkFFRCxPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztZQUM3QyxDQUFDO1NBQ0YsQ0FBUSxDQUFDO0lBQ1osQ0FBQztDQUNGO0FBRUQsa0JBQWUsUUFBUSxDQUFDIn0=