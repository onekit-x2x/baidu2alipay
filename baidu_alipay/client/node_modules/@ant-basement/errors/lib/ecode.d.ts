import * as ServerErrors from './errors/server';
import * as PolicyErrors from './errors/policy';
import * as ControlErrors from './errors/control';
import * as GatewayErrors from './errors/gateway';
import * as RequestErrors from './errors/request';
declare const ECODE: {
    TenantNotAvailableError: typeof ControlErrors.TenantNotAvailableError;
    SpaceNotFoundError: typeof ControlErrors.SpaceNotFoundError;
    ResourceNotInitializedError: typeof ControlErrors.ResourceNotInitializedError;
    DecisionNotFoundError: typeof ControlErrors.DecisionNotFoundError;
    SpaceNameConflictError: typeof ControlErrors.SpaceNameConflictError;
    ResourceMismatchError: typeof ControlErrors.ResourceMismatchError;
    UnauthorizedError: typeof GatewayErrors.UnauthorizedError;
    ExceedQuotaError: typeof GatewayErrors.ExceedQuotaError;
    ServiceLimitError: typeof GatewayErrors.ServiceLimitError;
    ValidationError: typeof RequestErrors.ValidationError;
    UnsupportedError: typeof RequestErrors.UnsupportedError;
    NotFoundError: typeof RequestErrors.NotFoundError;
    TimeoutError: typeof RequestErrors.TimeoutError;
    PolicySyntaxError: typeof PolicyErrors.PolicySyntaxError;
    PolicyDeniedError: typeof PolicyErrors.PolicyDeniedError;
    InternalServerError: typeof ServerErrors.InternalServerError;
    ConnectionError: typeof ServerErrors.ConnectionError;
    ParseError: typeof ServerErrors.ParseError;
    UnknownError: typeof ServerErrors.UnknownError;
};
declare const ENAME: {};
export { ECODE, ENAME };
