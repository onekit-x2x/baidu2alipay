import { PURPOSE, OPERATION, SCOPE } from './opMeta';
declare const DATABASE_OP: {
    COLLECTIONS: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
    };
    CREATE_COLLECTION: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
    STATS: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
    };
};
declare const COLLECTION_OP: {
    DROP: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
    };
    RENAME: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
    CREATE_INDEX: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, any>;
    };
    CREATE_INDEXES: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
    LIST_INDEXES: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
    DROP_INDEX: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
    DROP_INDEXES: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
    INSERT_ONE: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
    INSERT_MANY: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
    FIND: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, any>;
    };
    FIND_ONE: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
    FIND_ONE_AND_UPDATE: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
    FIND_ONE_AND_REPLACE: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
    FIND_ONE_AND_DELETE: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
    UPDATE_ONE: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
    UPDATE_MANY: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
    REPLACE_ONE: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
    DELETE_ONE: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
    DELETE_MANY: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
    COUNT: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
    DISTINCT: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
    AGGREGATE: {
        scope: SCOPE;
        purpose: PURPOSE;
        operation: OPERATION;
        signature: Map<string, string>;
    };
};
export * from './opMeta';
export { DATABASE_OP, COLLECTION_OP };
