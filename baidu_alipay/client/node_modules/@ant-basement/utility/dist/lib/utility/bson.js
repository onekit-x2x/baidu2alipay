"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const constant_1 = require("../constant");
exports.fromJs = {
    fromDate(val) {
        return val.toISOString();
    },
    fromRegexp(val) {
        return `/${val.source.replace(/\\\//g, '/')}/${val.flags}`;
    },
    fromObjectId(val) {
        return `${constant_1.PREFIXES.ObjectId}${val.toString()}`;
    },
};
exports.fromJson = {
    toDate(val) {
        return new Date(val);
    },
    toObjectId(val) {
        return val.slice(constant_1.PREFIXES.ObjectId.length);
    },
    toRegexp(val) {
        const firstIndex = val.indexOf('/');
        const lastIndex = val.lastIndexOf('/');
        return new RegExp(val.slice(firstIndex + 1, lastIndex), val.slice(lastIndex + 1));
    },
};
exports.is = {
    _isByProto(val, type) {
        return Object.prototype.toString.call(val) === `[object ${type}]`;
    },
    isArray(val) {
        return Array.isArray(val);
    },
    isObject(val) {
        return val !== null && typeof val === 'object' && !this.isArray(val);
    },
    isString(val) {
        return typeof val === 'string' || this._isByProto(val, 'String');
    },
    isDate(val) {
        return this.isString(val) && /^\d{4}\-\d{2}\-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z$/.test(val) && !isNaN(Date.parse(val));
    },
    isObjectId(val) {
        if (this.isString(val) && val.startsWith(constant_1.PREFIXES.ObjectId)) {
            const str = val.slice(constant_1.PREFIXES.ObjectId.length);
            if (str.length === constant_1.OID_LENGTH) {
                return true;
            }
        }
        return false;
    },
    isRegexp(val) {
        if (this.isString(val)) {
            let areFlagsValid = true;
            const parts = val.split('/');
            const last = parts[parts.length - 1];
            if (last) {
                areFlagsValid = last.split('').reduce((expr, p) => {
                    return expr === true && constant_1.REGEXP_FLAGS.indexOf(p) > -1;
                }, true);
            }
            return parts.length >= 2 && areFlagsValid;
        }
        return false;
    },
};
function js2json(data) {
    if (data instanceof RegExp) {
        return exports.fromJs.fromRegexp(data);
    }
    if (data instanceof Date) {
        return exports.fromJs.fromDate(data);
    }
    if (exports.is.isString(data) && /^[0-9a-fA-F]{24}$/.test(data)) {
        return exports.fromJs.fromObjectId(data);
    }
    if (exports.is.isArray(data)) {
        return data.map(js2json);
    }
    if (exports.is.isObject(data)) {
        return Object.keys(data).reduce((accu, k) => {
            accu[k] = js2json(data[k]);
            return accu;
        }, {});
    }
    return data;
}
exports.js2json = js2json;
function json2js(data) {
    if (exports.is.isRegexp(data)) {
        return exports.fromJson.toRegexp(data);
    }
    if (exports.is.isObjectId(data)) {
        return exports.fromJson.toObjectId(data);
    }
    if (exports.is.isDate(data)) {
        return exports.fromJson.toDate(data);
    }
    if (exports.is.isArray(data)) {
        return data.map(json2js);
    }
    if (exports.is.isObject(data)) {
        return Object.keys(data).reduce((accu, k) => {
            accu[k] = json2js(data[k]);
            return accu;
        }, {});
    }
    return data;
}
exports.json2js = json2js;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnNvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi91dGlsaXR5L2Jzb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwwQ0FBaUU7QUFFcEQsUUFBQSxNQUFNLEdBQUc7SUFLcEIsUUFBUSxDQUFDLEdBQUc7UUFDVixPQUFPLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBS0QsVUFBVSxDQUFDLEdBQUc7UUFDWixPQUFPLElBQUksR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUM3RCxDQUFDO0lBS0QsWUFBWSxDQUFDLEdBQUc7UUFDZCxPQUFPLEdBQUcsbUJBQVEsQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUM7SUFDakQsQ0FBQztDQUNGLENBQUM7QUFFVyxRQUFBLFFBQVEsR0FBRztJQUt0QixNQUFNLENBQUMsR0FBRztRQUNSLE9BQU8sSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDdkIsQ0FBQztJQUtELFVBQVUsQ0FBQyxHQUFHO1FBQ1osT0FBTyxHQUFHLENBQUMsS0FBSyxDQUFDLG1CQUFRLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFLRCxRQUFRLENBQUMsR0FBRztRQUNWLE1BQU0sVUFBVSxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDcEMsTUFBTSxTQUFTLEdBQUcsR0FBRyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUV2QyxPQUFPLElBQUksTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsVUFBVSxHQUFHLENBQUMsRUFBRSxTQUFTLENBQUMsRUFBRSxHQUFHLENBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3BGLENBQUM7Q0FDRixDQUFDO0FBRVcsUUFBQSxFQUFFLEdBQUc7SUFNaEIsVUFBVSxDQUFDLEdBQUcsRUFBRSxJQUFJO1FBQ2xCLE9BQU8sTUFBTSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLFdBQVcsSUFBSSxHQUFHLENBQUM7SUFDcEUsQ0FBQztJQUtELE9BQU8sQ0FBQyxHQUFHO1FBQ1QsT0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFLRCxRQUFRLENBQUMsR0FBRztRQUNWLE9BQU8sR0FBRyxLQUFLLElBQUksSUFBSSxPQUFPLEdBQUcsS0FBSyxRQUFRLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZFLENBQUM7SUFLRCxRQUFRLENBQUMsR0FBRztRQUNWLE9BQU8sT0FBTyxHQUFHLEtBQUssUUFBUSxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ25FLENBQUM7SUFLRCxNQUFNLENBQUMsR0FBRztRQUNSLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsSUFBSSxpREFBaUQsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ3RILENBQUM7SUFLRCxVQUFVLENBQUMsR0FBRztRQUNaLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLG1CQUFRLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDM0QsTUFBTSxHQUFHLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxtQkFBUSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNoRCxJQUFJLEdBQUcsQ0FBQyxNQUFNLEtBQUsscUJBQVUsRUFBRTtnQkFDN0IsT0FBTyxJQUFJLENBQUM7YUFDYjtTQUNGO1FBRUQsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBS0QsUUFBUSxDQUFDLEdBQUc7UUFDVixJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDdEIsSUFBSSxhQUFhLEdBQUcsSUFBSSxDQUFDO1lBQ3pCLE1BQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDN0IsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFFckMsSUFBSSxJQUFJLEVBQUU7Z0JBQ1IsYUFBYSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxFQUFFO29CQUNoRCxPQUFPLElBQUksS0FBSyxJQUFJLElBQUksdUJBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQ3ZELENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQzthQUNWO1lBRUQsT0FBTyxLQUFLLENBQUMsTUFBTSxJQUFJLENBQUMsSUFBSSxhQUFhLENBQUM7U0FDM0M7UUFFRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7Q0FDRixDQUFDO0FBRUYsaUJBQXdCLElBQUk7SUFDMUIsSUFBSSxJQUFJLFlBQVksTUFBTSxFQUFFO1FBQzFCLE9BQU8sY0FBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUNoQztJQUNELElBQUksSUFBSSxZQUFZLElBQUksRUFBRTtRQUN4QixPQUFPLGNBQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDOUI7SUFDRCxJQUFJLFVBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksbUJBQW1CLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ3ZELE9BQU8sY0FBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUNsQztJQUNELElBQUksVUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUNwQixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDMUI7SUFDRCxJQUFJLFVBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFDckIsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMxQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzNCLE9BQU8sSUFBSSxDQUFDO1FBQ2QsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0tBQ1I7SUFFRCxPQUFPLElBQUksQ0FBQztBQUNkLENBQUM7QUFyQkQsMEJBcUJDO0FBRUQsaUJBQXdCLElBQUk7SUFDMUIsSUFBSSxVQUFFLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ3JCLE9BQU8sZ0JBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDaEM7SUFDRCxJQUFJLFVBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFDdkIsT0FBTyxnQkFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUNsQztJQUNELElBQUksVUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUNuQixPQUFPLGdCQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzlCO0lBQ0QsSUFBSSxVQUFFLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztLQUMxQjtJQUNELElBQUksVUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUNyQixPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDM0IsT0FBTyxJQUFJLENBQUM7UUFDZCxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7S0FDUjtJQUVELE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQztBQXJCRCwwQkFxQkMifQ==